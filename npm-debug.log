0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /home/jas/.npm/3a52ce78-.lock
10 verbose tar pack [ '/home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz
12 verbose folder .
13 info prepublish connect-redis-crypto@1.4.9
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /home/jas/.npm/1f1177db-tar.lock
16 silly lockFile f1229540-0627-0-23094003507867455-tmp-tgz tar:///home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz
17 verbose lock tar:///home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz /home/jas/.npm/f1229540-0627-0-23094003507867455-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile f1229540-0627-0-23094003507867455-tmp-tgz tar:///home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz
21 silly lockFile f1229540-0627-0-23094003507867455-tmp-tgz tar:///home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz
22 verbose tar unpack /home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz
23 silly lockFile f7af6755-nnect-redis-crypto-1-4-9-package tar:///home/jas/.npm/connect-redis-crypto/1.4.9/package
24 verbose lock tar:///home/jas/.npm/connect-redis-crypto/1.4.9/package /home/jas/.npm/f7af6755-nnect-redis-crypto-1-4-9-package.lock
25 silly lockFile f1229540-0627-0-23094003507867455-tmp-tgz tar:///home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz
26 verbose lock tar:///home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz /home/jas/.npm/f1229540-0627-0-23094003507867455-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
30 silly gunzTarPerm extractEntry .npmignore
31 silly gunzTarPerm modified mode [ '.npmignore', 436, 420 ]
32 silly gunzTarPerm extractEntry test.js
33 silly gunzTarPerm modified mode [ 'test.js', 436, 420 ]
34 silly gunzTarPerm extractEntry index.js
35 silly gunzTarPerm modified mode [ 'index.js', 436, 420 ]
36 silly gunzTarPerm extractEntry bm.js
37 silly gunzTarPerm modified mode [ 'bm.js', 436, 420 ]
38 silly gunzTarPerm extractEntry test_crypto.js
39 silly gunzTarPerm modified mode [ 'test_crypto.js', 436, 420 ]
40 silly gunzTarPerm extractEntry Readme.md
41 silly gunzTarPerm modified mode [ 'Readme.md', 436, 420 ]
42 silly gunzTarPerm extractEntry .gitmodules
43 silly gunzTarPerm modified mode [ '.gitmodules', 436, 420 ]
44 silly gunzTarPerm extractEntry Makefile
45 silly gunzTarPerm modified mode [ 'Makefile', 436, 420 ]
46 silly gunzTarPerm extractEntry lib/connect-redis-crypto.js
47 silly gunzTarPerm modified mode [ 'lib/connect-redis-crypto.js', 436, 420 ]
48 silly gunzTarPerm extractEntry History.md
49 silly gunzTarPerm modified mode [ 'History.md', 436, 420 ]
50 silly gunzTarPerm extractEntry .travis.yml
51 silly gunzTarPerm modified mode [ '.travis.yml', 436, 420 ]
52 silly gunzTarPerm extractEntry index.html
53 silly gunzTarPerm modified mode [ 'index.html', 436, 420 ]
54 silly lockFile f7af6755-nnect-redis-crypto-1-4-9-package tar:///home/jas/.npm/connect-redis-crypto/1.4.9/package
55 silly lockFile f7af6755-nnect-redis-crypto-1-4-9-package tar:///home/jas/.npm/connect-redis-crypto/1.4.9/package
56 silly lockFile f1229540-0627-0-23094003507867455-tmp-tgz tar:///home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz
57 silly lockFile f1229540-0627-0-23094003507867455-tmp-tgz tar:///home/jas/tmp/npm-1774-yTTdk5Bi/1402932790627-0.23094003507867455/tmp.tgz
58 silly lockFile 3a52ce78- .
59 silly lockFile 3a52ce78- .
60 silly publish { name: 'connect-redis-crypto',
60 silly publish   description: 'Redis session store for Connect with encryption support',
60 silly publish   version: '1.4.9',
60 silly publish   authors:
60 silly publish    [ 'TJ Holowaychuk <tj@vision-media.ca>',
60 silly publish      'Jason Gerfen <jason.gerfen@gmail.com>' ],
60 silly publish   main: './index.js',
60 silly publish   repository:
60 silly publish    { type: 'git',
60 silly publish      url: 'git@github.com:jas-/connect-redis-crypto.git' },
60 silly publish   dependencies: { redis: '~0.9.2', debug: '*', connect: '~2.14.1' },
60 silly publish   devDependencies: { connect: '*' },
60 silly publish   engines: { node: '*' },
60 silly publish   bugs: { url: 'https://github.com/jas-/connect-redis-crypto/issues' },
60 silly publish   scripts: { test: 'node test.js; node test_crypto.js' },
60 silly publish   readme: '# Connect Redis\n\nconnect-redis-crypto (fork of connect-redis) is a Redis session store backed by [node_redis](http://github.com/mranney/node_redis), and is insanely fast :). Requires redis >= `2.0.0` for the _SETEX_ command.\n\n connect-redis `>= 1.0.0` support only connect `>= 1.0.0`.\n\n## Installation\n\n\t  $ npm install connect-redis\n\n## Options\n  \n  - `client` An existing redis client object you normally get from `redis.createClient()`\n  - `host` Redis server hostname\n  - `port` Redis server portno\n  - `ttl` Redis session TTL in seconds\n  - `db` Database index to use\n  - `pass` Password for Redis authentication\n  - `prefix` Key prefix defaulting to "sess:"\n  - `secret` If specifies enables encryption for session data\n  - `url` String that contains connection information in a single url (redis://user:pass@host:port/db)\n  - ...    Remaining options passed to the redis `createClient()` method.\n\n## Usage\n\n Due to npm 1.x changes, we now need to pass connect to the function `connect-redis` exports in order to extend `connect.session.Store`:\n\n    var connect = require(\'connect\')\n\t \t  , RedisStore = require(\'connect-redis\')(connect);\n\n    connect()\n      .use(connect.session({ store: new RedisStore(options), secret: \'keyboard cat\' }))\n \n\n This means express users may do the following, since `express.session.Store` points to the `connect.session.Store` function:\n \n    var RedisStore = require(\'connect-redis\')(express);\n\n# License\n\n  MIT\n',
60 silly publish   readmeFilename: 'Readme.md',
60 silly publish   homepage: 'https://github.com/jas-/connect-redis-crypto',
60 silly publish   _id: 'connect-redis-crypto@1.4.9',
60 silly publish   _shasum: 'c954ea04387ecbf8443785f974581250a101bff5',
60 silly publish   _from: '.' }
61 verbose url raw connect-redis-crypto
62 verbose url resolving [ 'https://registry.npmjs.org/', './connect-redis-crypto' ]
63 verbose url resolved https://registry.npmjs.org/connect-redis-crypto
64 info trying registry request attempt 1 at 09:33:14
65 http PUT https://registry.npmjs.org/connect-redis-crypto
66 http 403 https://registry.npmjs.org/connect-redis-crypto
67 verbose headers { date: 'Mon, 16 Jun 2014 15:33:16 GMT',
67 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
67 verbose headers   'content-type': 'application/json',
67 verbose headers   'cache-control': 'max-age=30',
67 verbose headers   'content-length': '4076',
67 verbose headers   'accept-ranges': 'bytes',
67 verbose headers   via: '1.1 varnish',
67 verbose headers   'x-served-by': 'cache-lax1423-LAX',
67 verbose headers   'x-cache': 'MISS',
67 verbose headers   'x-cache-hits': '0',
67 verbose headers   'x-timer': 'S1402932796.780849,VS0,VE170',
67 verbose headers   'keep-alive': 'timeout=10, max=50',
67 verbose headers   connection: 'Keep-Alive' }
68 error publish Failed PUT 403
69 error Error: forbidden cannot modify pre-existing version: 1.4.9
69 error old={"name":"connect-redis-crypto","description":"Redis session store for Connect with encryption support","version":"1.4.9","authors":["TJ Holowaychuk <tj@vision-media.ca>","Jason Gerfen <jason.gerfen@gmail.com>"],"main":"./index.js","repository":{"type":"git","url":"git@github.com:jas-/connect-redis-crypto.git"},"dependencies":{"redis":"~0.9.2","debug":"*","connect":"~2.14.1"},"devDependencies":{"connect":"*"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/jas-/connect-redis-crypto/issues"},"scripts":{"test":"node test.js; node test_crypto.js"},"homepage":"https://github.com/jas-/connect-redis-crypto","_id":"connect-redis-crypto@1.4.9","dist":{"shasum":"1c64600c9f1e68de91c3bec4f22f6df7e424d5fd","tarball":"http://registry.npmjs.org/connect-redis-crypto/-/connect-redis-crypto-1.4.9.tgz"},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"jas-","email":"jason.gerfen@gmail.com"},"maintainers":[{"name":"jas-","email":"jason.gerfen@gmail.com"}]}
69 error new={"name":"connect-redis-crypto","description":"Redis session store for Connect with encryption support","version":"1.4.9","authors":["TJ Holowaychuk <tj@vision-media.ca>","Jason Gerfen <jason.gerfen@gmail.com>"],"main":"./index.js","repository":{"type":"git","url":"git@github.com:jas-/connect-redis-crypto.git"},"dependencies":{"redis":"~0.9.2","debug":"*","connect":"~2.14.1"},"devDependencies":{"connect":"*"},"engines":{"node":"*"},"bugs":{"url":"https://github.com/jas-/connect-redis-crypto/issues"},"scripts":{"test":"node test.js; node test_crypto.js"},"readme":"# Connect Redis\u000a\u000aconnect-redis-crypto (fork of connect-redis) is a Redis session store backed by [node_redis](http://github.com/mranney/node_redis), and is insanely fast :). Requires redis >= `2.0.0` for the _SETEX_ command.\u000a\u000a connect-redis `>= 1.0.0` support only connect `>= 1.0.0`.\u000a\u000a## Installation\u000a\u000a\u0009  $ npm install connect-redis\u000a\u000a## Options\u000a  \u000a  - `client` An existing redis client object you normally get from `redis.createClient()`\u000a  - `host` Redis server hostname\u000a  - `port` Redis server portno\u000a  - `ttl` Redis session TTL in seconds\u000a  - `db` Database index to use\u000a  - `pass` Password for Redis authentication\u000a  - `prefix` Key prefix defaulting to \"sess:\"\u000a  - `secret` If specifies enables encryption for session data\u000a  - `url` String that contains connection information in a single url (redis://user:pass@host:port/db)\u000a  - ...    Remaining options passed to the redis `createClient()` method.\u000a\u000a## Usage\u000a\u000a Due to npm 1.x changes, we now need to pass connect to the function `connect-redis` exports in order to extend `connect.session.Store`:\u000a\u000a    var connect = require('connect')\u000a\u0009 \u0009  , RedisStore = require('connect-redis')(connect);\u000a\u000a    connect()\u000a      .use(connect.session({ store: new RedisStore(options), secret: 'keyboard cat' }))\u000a \u000a\u000a This means express users may do the following, since `express.session.Store` points to the `connect.session.Store` function:\u000a \u000a    var RedisStore = require('connect-redis')(express);\u000a\u000a# License\u000a\u000a  MIT\u000a","readmeFilename":"Readme.md","homepage":"https://github.com/jas-/connect-redis-crypto","_id":"connect-redis-crypto@1.4.9","_shasum":"c954ea04387ecbf8443785f974581250a101bff5","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"jas-","email":"jason.gerfen@gmail.com"},"maintainers":[{"name":"jas-","email":"jason.gerfen@gmail.com"}],"dist":{"shasum":"c954ea04387ecbf8443785f974581250a101bff5","tarball":"http://registry.npmjs.org/connect-redis-crypto/-/connect-redis-crypto-1.4.9.tgz"}}: connect-redis-crypto
69 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:273:14)
69 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:211:65)
69 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:123:22)
69 error     at Request.EventEmitter.emit (events.js:98:17)
69 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:893:14)
69 error     at Request.EventEmitter.emit (events.js:117:20)
69 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:844:12)
69 error     at IncomingMessage.EventEmitter.emit (events.js:117:20)
69 error     at _stream_readable.js:919:16
69 error     at process._tickCallback (node.js:419:13)
70 error If you need help, you may report this *entire* log,
70 error including the npm and node versions, at:
70 error     <http://github.com/npm/npm/issues>
71 error System Linux 2.6.32-431.17.1.el6.x86_64
72 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
73 error cwd /home/jas/projects/mine/connect-redis-crypto
74 error node -v v0.10.28
75 error npm -v 1.4.9
76 verbose exit [ 1, true ]
